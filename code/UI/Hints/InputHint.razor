@using System;
@using Sandbox;
@using Sandbox.UI;
@inherits Panel;
@attribute [StyleSheet("/UI/Hints/InputHint.scss")]
@namespace CrazyEights.UI

<root>
    <image class="glyph" @ref=Glyph></image>
    <label class="action">@Text</label>
</root>

@code
{
    public string Text { get; set; }

    private Image Glyph { get; set; }
    private InputButton Button { get; set; }

    protected bool IsSet = false;

    protected override void OnAfterTreeRender(bool firstTime)
    {
        if (!firstTime) return;

        BindClass("noaction", () => string.IsNullOrEmpty(Text));
    }

    public override void SetProperty(string name, string value)
    {
        base.SetProperty(name, value);

        if(name == "btn")
            SetButton(Enum.Parse<InputButton>(value, true));
    }

    public void SetButton(InputButton button)
    {
        Button = button;
        IsSet = true;
    }

    public override void Tick()
    {
        base.Tick();

        if(IsSet)
        {
            Texture glyphTexture = Input.GetGlyph(Button, InputGlyphSize.Small, GlyphStyle.Knockout.WithNeutralColorABXY().WithSolidABXY());
            if(glyphTexture != null)
            {
                Glyph.Texture = glyphTexture;
                Glyph.Style.Width = glyphTexture.Width;
                Glyph.Style.Height = glyphTexture.Height;
            }
            else
            {
                Glyph.Texture = Texture.Load(FileSystem.Mounted, "/ui/Input/invalid_glyph.png");
            }
        }
    }
}