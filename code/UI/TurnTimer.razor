@using System;
@using Sandbox;
@using Sandbox.UI;
@using CrazyEights;
@inherits Panel;
@attribute [StyleSheet("/UI/TurnTimer.scss")]
@namespace CrazyEights.UI

<root>
    <label>@TimeString()</label>
</root>

@code
{
    private TimeUntil turnOver = -1;

    /// <summary>
    /// Formatted timer text.
    /// </summary>
    /// <returns></returns>
    public string TimeString()
    {
        var span = TimeSpan.FromSeconds(turnOver);
        return $"{span.Minutes:D1}:{span.Seconds:D2}";
    }

    protected override void OnAfterTreeRender(bool firstTime)
    {
        if (!firstTime) return;

        BindClass("active", () => CrazyEights.Game.Current.CurrentPlayer == Local.Client.Pawn && turnOver > 0 && turnOver < 10);
    }

    protected override int BuildHash() => HashCode.Combine(TimeString());

    TimeSince soundPlayed;
    public override void Tick()
    {
        // Not current player,
        if(CrazyEights.Game.Current.CurrentPlayer != Local.Pawn) return;

        // Play tick sound every second when panel is active,
        if(turnOver < 10 && turnOver > 0 && soundPlayed > 1)
        {
            soundPlayed = 0;
            Sound.FromScreen("countdowntick");
        }
    }

    /// <summary>
    /// Sets turnOver to Max Turn Time, priming the panel to appear.
    /// </summary>
    public void Activate() => turnOver = CrazyEights.Game.MaxTurnTime;
}